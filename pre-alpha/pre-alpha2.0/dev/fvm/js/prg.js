var prgSrc = `
/*
  Copyright 2017, Robert Gollagher.
  SPDX-License-Identifier: GPL-3.0+

  Program:    prg.js (also known as prg.c)
  Author :    Robert Gollagher   robert.gollagher@freeputer.net
  Created:    20170911
  Updated:    20171104+
  ------------------
  FREE:
  LAST SYMBOL: s000a
  ------------------

*/
// ===========================================================================
// Constants -----------------------------------------------------------------

// ===========================================================================
// The sole forward reference ------------------------------------------------
jump(s0000) /*start*/
// ===========================================================================
// Success -------------------------------------------------------------------
s0002: /*end:*/ b(0x00) halt

// ===========================================================================
// Pseudoinstructions: only these use do/done (formerly br/link)
// ===========================================================================
s000a: /*double*/ tob add done // TODO consider removing vL entirely

// ===========================================================================
// Experiments in factoring
// ===========================================================================




// ===========================================================================
// Text Output Utilities
// ===========================================================================
// Print a newline character -------------------------------------------------
s0004: /*print_newline*/ a(0x0a) out ret
// ---------------------------------------------------------------------------
// Print the uppercase alphabet ----------------------------------------------
s0006: /*print_alphabet*/
    a(0x41) b(0x01) r(0x19)
  s0005: /*loop_alpha:*/
    out add rpt(s0005) /*loop_alpha*/
    ret
// ---------------------------------------------------------------------------
// Hexadecimal print LSN -----------------------------------------------------
s0003: /*alpha*/ b(0x57) /*'a'*/ add out fromt ret 
s0007: /*print_hex_nibble*/
  tot
  b(0x0fffffff) xor b(0x1c) shr
  b(0x09) jmpg(s0003) /*alpha*/
  b(0x30) /*'0'*/ add out fromt ret
// ---------------------------------------------------------------------------
// Hexadecimal print word ----------------------------------------------------
s0008: /*print_hex_word*/
  r(0x07)
  s0009: /*loop_print_hex*/
    call(s0007) /*print_hex_nibble*/
    b(0x04) shl // FIXME disallow decimal immediates
    rpt(s0009) /*print_hex_word*/
    ret
// ---------------------------------------------------------------------------

// ===========================================================================
// Secondary entry point
// ===========================================================================
s0001: /*go:*/
  a(3) do(s000a) /*double*/
  a(0x00000000) call(s0007) /*print_hex_nibble*/
  a(0x90000000) call(s0007) /*print_hex_nibble*/
  a(0xa0000000) call(s0007) /*print_hex_nibble*/
  a(0xf0000000) call(s0007) /*print_hex_nibble*/
  call(s0004) /*print_newline*/
  a(0x7654321a) call(s0008) /*print_hex_word*/
  call(s0004) /*print_newline*/
  call(s0006) /*print_alphabet*/
  jump(s0002) /*end*/

// ===========================================================================
// Primary entry point
// ===========================================================================
s0000: /*start:*/
  jump(s0001) /*go*/
// ---------------------------------------------------------------------------
`;
